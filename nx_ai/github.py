import requests
import os
from github import Github, Auth

from nx_ai.utils.clean_md import clean_md_for_rag
from nx_ai.config import get_config


BASE_URL = "https://raw.githubusercontent.com/nx-academy/nx-academy.github.io/refs/heads/main/src/pages/cours"


def create_course_folder():
    if not os.path.exists("nx_ai/courses_data"):
        os.makedirs("nx_ai/courses_data")


def write_content_from_github(url, document_name):    
    response = requests.get(url)
    
    if response.status_code == 200:
        create_course_folder()
        
        with open(f"nx_ai/courses_data/{document_name}", "w", encoding="utf-8") as file:
            file.write(clean_md_for_rag(response.text))


def create_pull_request_on_github(document_name, type):
    auth = Auth.Token(get_config()["github_token"])
    g = Github(auth=auth)
    
    repo = g.get_organization("nx-academy").get_repo("nx-academy.github.io")
    sb = repo.get_branch("main")
    
    if type == "quiz":
        repo.create_git_ref(ref=f"refs/heads/ai_{document_name}-quiz", sha=sb.commit.sha)
    else:
        repo.create_git_ref(ref=f"refs/heads/ai_{document_name}-recap", sha=sb.commit.sha)
        
    
    print(f"Successfully created branch {document_name} quiz")
    
    if type == "quiz":
        try:
            with open(f"nx_ai/quizzes_data/{document_name}.json", "r", encoding="utf-8") as f:
                content = f.read()
            
                repo.create_file(
                    path=f"public/quiz/{document_name}.json",
                    message=f"Ajout du quiz {document_name}",
                    content=content,
                    branch=f"ai_{document_name}-quiz"
                )
    
                print(f"Successfully commit {document_name}.json file")
    
                repo.create_pull(
                    base="main",
                    title=f"(IA): Adding {document_name} quiz",
                    body="Autogenerated content for quiz",
                    head=f"ai_{document_name}-quiz"
                )
    
                print(f"Successfully create the PR")
        except FileNotFoundError:
            print(f"Unable to find the location for the file named: {document_name}")
            
    else:
        try:
            with open(f"nx_ai/recap_data/{document_name}.md", "r", encoding="utf-8") as f:
                content = f.read()
            
                repo.create_file(
                    path=f"src/pages/articles/{document_name}.md",
                    message=f"Ajout du recap: {document_name}",
                    content=content,
                    branch=f"ai_{document_name}-recap"
                )
    
                print(f"Successfully commit {document_name}.md file")
    
                repo.create_pull(
                    base="main",
                    title=f"(IA): Add autogenerated recap: {document_name}",
                    body="Autogenerated content for recap",
                    head=f"ai_{document_name}-recap"
                )
    
                print(f"Successfully create the PR")
        except FileNotFoundError:
            print(f"Unable to find the location for the file named: {document_name}")
    
    g.close()
