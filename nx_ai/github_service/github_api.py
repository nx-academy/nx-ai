import os
from github import Github, Auth


GITHUB_TOKEN = os.environ.get("GITHUB_TOKEN")


def trigger_gh_rebuild():
    auth = Auth.Token(GITHUB_TOKEN)
    g = Github(auth=auth)
    
    repo = g.get_organization("nx-academy").get_repo("nx-academy.github.io")
    workflow = repo.get_workflow("deploy.yml")
    
    workflow.create_dispatch(ref="main")
    print("âœ… Rebuild triggered via GitHub Actions.")


def create_pull_request_on_github(filename: str, type: str):
    auth = Auth.Token(GITHUB_TOKEN)
    g = Github(auth=auth)
    
    repo = g.get_organization("nx-academy").get_repo("nx-academy.github.io")
    sb = repo.get_branch("main")
    
    if type == "quiz":
        repo.create_git_ref(ref=f"refs/heads/ai_{filename}-quiz", sha=sb.commit.sha)
        print(f"Successfully created branch ai_{filename}-quiz")
        
        with open(f"nx_ai/quizzes_data/{filename}.json", "r", 
                encoding="utf-8") as f:
            content = f.read()
            
            # If the file already exists, it will throw an errors
            repo.create_file(
                path=f"public/quiz/{filename}.json",
                message=f"Ajout du quiz {filename}",
                content=content,
                branch=f"ai_{filename}-quiz"
            )
            print(f"Successfully commit {filename}.json file")
            
            repo.create_pull(
                base="main",
                title=f"(IA): Add {filename} quiz",
                body="Autogenerated content for quiz",
                head=f"ai_{filename}-quiz"
            )
            print(f"Successfully create the PR")

    elif type == "recap":
        repo.create_git_ref(ref=f"refs/heads/ai_{filename}", sha=sb.commit.sha)
        print(f"Successfully created branch ai_{filename}")
        
        with open(f"nx_ai/recap_data/{filename}.md", "r", encoding="utf-8") as f:
            content = f.read()
            
        repo.create_file(
            path=f"src/pages/drafts/{filename}.md",
            message=f"Ajout du recap {filename}",
            content=content,
            branch=f"ai_{filename}"
        )
        print(f"Successfully commit {filename}.md file")
        
        repo.create_pull(
            base="main",
            title=f"(AI): Add {filename}",
            body="Autogenerated recap with AI",
            head=f"ai_{filename}"
        )
        print("Successfully created the PR")
        
    
    else:
        raise ValueError("Unknow file type to create")
    
    g.close()
